farm -> Objeto FarmFresh2You que contem a quinta (idFarm) e a garagem (idGarage)
graph -> Grafo
filename -> nome do ficheiro de onde lê os cabazes
resultFilename -> nome do ficheiro para onde exporta o resultado
baskets -> vetor de baskets com a localização da entrega (idDelivery)

aStarAlgorithm(farm, graph, filename, resultFilename):

    baskets <- readBasketsFromFile(filename);

    graph->aStarAlgorithmGraph(idFarm, idDelivery);

    graph->exportResultsToFile(resultFilename, idFarm, idDelivery);

    graph->aStarAlgorithmGraph(idDelivery, idGarage);

    graph->exportResultsToFile(resultFilename, idDelivery, idGarage);




/--------------------------------------------------------------------------/


id1 -> id do vertice de origem
id2 -> id do vertice de chegada
vertice1 -> vertice de id1
vertice2 -> vertice de id2


aStarAlgorithmGraph(id1, id2):

    InitializingRoutine();

    Queue <- vertice1;

    while (Queue not empty):
        
        vertice <- EXTRACT-MIN(Queue); 
        
        if (vertice equals vertice2)
            END;
        
        for(neighborVertice of Vertice):
            
            ne
            newGValue <- calculateGValue(neighborVertice);

            if(newGValue < neighborVertice.oldGValue)

                updateValues(neighborVertice)
                
                if(neighborVertice not visited)
                    INSERT-QUEUE(Queue, neighborVertice);
                else
                    DECREASE-KEY(Queue, neighborVertice);





